{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nexport const fetchUsers = createAsyncThunk('users/fetchUsers', async () => {\n  const data = await fetch(\"http://localhost:3000/users\");\n  const result = await data.json();\n  console.log(result);\n  return result;\n});\nconst initialState = {\n  status: \"idle\",\n  users: []\n};\nconst userSlice = createSlice({\n  name: 'users',\n  initialState: initialState,\n  reducers: {},\n  extraReducers(builder) {\n    builder.addCase(fetchUsers.pending, (state, action) => {\n      state.status = 'loading';\n    }).addCase(fetchUsers.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      // Add any fetched posts to the array\n      console.log('action', action);\n      // state.users = state.users.concat(action.payload)\n      state.users = [...action.payload];\n    }).addCase(fetchUsers.rejected, (state, action) => {\n      state.status = 'failed';\n    });\n  }\n});\nexport default userSlice.reducer;\n\n//status","map":{"version":3,"names":["createAsyncThunk","createSlice","fetchUsers","data","fetch","result","json","console","log","initialState","status","users","userSlice","name","reducers","extraReducers","builder","addCase","pending","state","action","fulfilled","payload","rejected","reducer"],"sources":["C:/Users/Asus/Desktop/fe-2403/react_basic/lession1/lesson1/src/store/userSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const fetchUsers = createAsyncThunk('users/fetchUsers', async () => {\r\n    const data = await fetch(\"http://localhost:3000/users\");\r\n    const result = await data.json();\r\n    console.log(result);\r\n    return result;\r\n});\r\n\r\n\r\nconst initialState = {\r\n    status: \"idle\",\r\n    users: [],\r\n};\r\nconst userSlice = createSlice({\r\n    name: 'users',\r\n    initialState: initialState,\r\n    reducers: {},\r\n    extraReducers(builder) {\r\n        builder\r\n            .addCase(fetchUsers.pending, (state, action) => {\r\n                state.status = 'loading'\r\n            })\r\n            .addCase(fetchUsers.fulfilled, (state, action) => {\r\n                state.status = 'succeeded'\r\n                // Add any fetched posts to the array\r\n                console.log('action', action)\r\n                // state.users = state.users.concat(action.payload)\r\n                state.users = [...action.payload]\r\n            })\r\n            .addCase(fetchUsers.rejected, (state, action) => {\r\n                state.status = 'failed';\r\n            });\r\n    },\r\n});\r\n\r\nexport default userSlice.reducer;\r\n\r\n\r\n\r\n\r\n//status "],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAEhE,OAAO,MAAMC,UAAU,GAAGF,gBAAgB,CAAC,kBAAkB,EAAE,YAAY;EACvE,MAAMG,IAAI,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;EACvD,MAAMC,MAAM,GAAG,MAAMF,IAAI,CAACG,IAAI,CAAC,CAAC;EAChCC,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;EACnB,OAAOA,MAAM;AACjB,CAAC,CAAC;AAGF,MAAMI,YAAY,GAAG;EACjBC,MAAM,EAAE,MAAM;EACdC,KAAK,EAAE;AACX,CAAC;AACD,MAAMC,SAAS,GAAGX,WAAW,CAAC;EAC1BY,IAAI,EAAE,OAAO;EACbJ,YAAY,EAAEA,YAAY;EAC1BK,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAaA,CAACC,OAAO,EAAE;IACnBA,OAAO,CACFC,OAAO,CAACf,UAAU,CAACgB,OAAO,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC5CD,KAAK,CAACT,MAAM,GAAG,SAAS;IAC5B,CAAC,CAAC,CACDO,OAAO,CAACf,UAAU,CAACmB,SAAS,EAAE,CAACF,KAAK,EAAEC,MAAM,KAAK;MAC9CD,KAAK,CAACT,MAAM,GAAG,WAAW;MAC1B;MACAH,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEY,MAAM,CAAC;MAC7B;MACAD,KAAK,CAACR,KAAK,GAAG,CAAC,GAAGS,MAAM,CAACE,OAAO,CAAC;IACrC,CAAC,CAAC,CACDL,OAAO,CAACf,UAAU,CAACqB,QAAQ,EAAE,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAC7CD,KAAK,CAACT,MAAM,GAAG,QAAQ;IAC3B,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,eAAeE,SAAS,CAACY,OAAO;;AAKhC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}